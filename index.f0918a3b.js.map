{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,IAAM,EAAW,SAAS,aAAa,CAAC,SACpC,EAAmB,KAEvB,SAAS,EAAgB,CAAG,CAAE,CAAK,EACjC,IAAM,EAAO,EAAI,gBAAgB,CAAC,KAAK,CAAC,EAAM,CAE9C,GAAI,CAAC,EACH,MAAO,GAGT,IAAM,EAAc,EAAK,WAAW,CAAC,IAAI,GAAG,OAAO,CAAC,QAAS,IAE7D,OAAO,MAAM,GAAe,EAAc,SAAS,EACrD,CAEA,EAAS,gBAAgB,CAAC,QAAS,SAAC,CAApC,EACE,IAAM,EAAiB,EAAE,MAAM,CAAC,OAAO,CAAC,MAExC,GAAK,GAIL,I,EAAM,EAAc,EAAe,SAAS,CACtC,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,gBAAgB,CAAC,c,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC1C,EAAQ,SAAS,aAAa,CAAC,QAEjC,CAAA,IAAqB,GACvB,EAAU,IAAI,CAAC,SAAC,CAAA,CAAM,CAAtB,EACE,IAAM,EAAS,EAAgB,EAAM,GAC/B,EAAS,EAAgB,EAAM,SAErC,AAAI,AAAkB,UAAlB,OAAO,GAAuB,AAAkB,UAAlB,OAAO,EAChC,EAAS,EAGd,AAAkB,UAAlB,OAAO,GAAuB,AAAkB,UAAlB,OAAO,EAChC,EAAO,aAAa,CAAC,SAEhC,GAEA,EAAmB,GAEnB,EAAU,OAAO,GAGnB,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,EAAM,WAAW,CAAC,EACpB,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write code here\nvar headline = document.querySelector(\"thead\");\nvar lastClickedIndex = null;\nfunction getCleanedValue(row, index) {\n    var cell = row.querySelectorAll(\"td\")[index];\n    if (!cell) return \"\";\n    var cleanedCell = cell.textContent.trim().replace(/[$,]/g, \"\");\n    return isNaN(cleanedCell) ? cleanedCell : parseInt(cleanedCell);\n}\nheadline.addEventListener(\"click\", function(e) {\n    var clickedElement = e.target.closest(\"th\");\n    if (!clickedElement) return;\n    var columnIndex = clickedElement.cellIndex;\n    var tableRows = _to_consumable_array(document.querySelectorAll(\"tbody tr\"));\n    var tbody = document.querySelector(\"tbody\");\n    if (lastClickedIndex !== columnIndex) {\n        tableRows.sort(function(row1, row2) {\n            var value1 = getCleanedValue(row1, columnIndex);\n            var value2 = getCleanedValue(row2, columnIndex);\n            if (typeof value1 === \"number\" && typeof value2 === \"number\") return value1 - value2;\n            if (typeof value1 === \"string\" && typeof value2 === \"string\") return value1.localeCompare(value2);\n        });\n        lastClickedIndex = columnIndex;\n    } else tableRows.reverse();\n    tableRows.forEach(function(rowData) {\n        tbody.appendChild(rowData);\n    });\n});\n\n//# sourceMappingURL=index.f0918a3b.js.map\n","'use strict';\n\n// write code here\nconst headline = document.querySelector('thead');\nlet lastClickedIndex = null;\n\nfunction getCleanedValue(row, index) {\n  const cell = row.querySelectorAll('td')[index];\n\n  if (!cell) {\n    return '';\n  }\n\n  const cleanedCell = cell.textContent.trim().replace(/[$,]/g, '');\n\n  return isNaN(cleanedCell) ? cleanedCell : parseInt(cleanedCell);\n}\n\nheadline.addEventListener('click', (e) => {\n  const clickedElement = e.target.closest('th');\n\n  if (!clickedElement) {\n    return;\n  }\n\n  const columnIndex = clickedElement.cellIndex;\n  const tableRows = [...document.querySelectorAll('tbody tr')];\n  const tbody = document.querySelector('tbody');\n\n  if (lastClickedIndex !== columnIndex) {\n    tableRows.sort((row1, row2) => {\n      const value1 = getCleanedValue(row1, columnIndex);\n      const value2 = getCleanedValue(row2, columnIndex);\n\n      if (typeof value1 === 'number' && typeof value2 === 'number') {\n        return value1 - value2;\n      }\n\n      if (typeof value1 === 'string' && typeof value2 === 'string') {\n        return value1.localeCompare(value2);\n      }\n    });\n\n    lastClickedIndex = columnIndex;\n  } else {\n    tableRows.reverse();\n  }\n\n  tableRows.forEach((rowData) => {\n    tbody.appendChild(rowData);\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","headline","document","querySelector","lastClickedIndex","getCleanedValue","row","index","cell","querySelectorAll","cleanedCell","textContent","trim","replace","isNaN","parseInt","addEventListener","e","clickedElement","target","closest","columnIndex","cellIndex","tableRows","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","tbody","sort","row1","row2","value1","value2","localeCompare","reverse","forEach","rowData","appendChild"],"version":3,"file":"index.f0918a3b.js.map"}